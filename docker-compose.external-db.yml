services:
  pec:
    container_name: pec
    platform: linux/amd64
    restart: unless-stopped
    volumes:
      - ./opt-esus:/opt/e-SUS
      - ./backups:/backups
    build:
      context: .
      dockerfile: Dockerfile.external-db
      args:
        - JAR_FILENAME=${JAR_FILENAME}
    stdin_open: true
    tty: true
    environment:
      - SERVICE_FQDN_PEC=${SERVICE_FQDN_PEC}
      - SERVICE_URL_PEC=${SERVICE_URL_PEC}
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - ESUS_VERSION=${ESUS_VERSION}
      - HTTPS_DOMAIN=${HTTPS_DOMAIN}
      - INSTALL_TYPE=${INSTALL_TYPE}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_PORT=${DB_PORT}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASS=${DB_PASSWORD}
      - JAR_FILENAME=${JAR_FILENAME}
      - TZ=${TZ}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pec.rule=Host(`esus.itagi.agilytech.com`)"
      - "traefik.http.routers.pec.entrypoints=websecure"
      - "traefik.http.services.pec.loadbalancer.server.port=8080"
      - "traefik.http.routers.pec.tls.certresolver=myresolver"
    networks:
      - coolify

networks:
  coolify:
    external: true
